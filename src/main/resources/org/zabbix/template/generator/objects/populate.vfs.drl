package org.zabbix.template.generator.objects
global org.slf4j.Logger logger;



rule "Rule 4: generate vfs.fs.pused"
	agenda-group "populate"
	salience -50
when
	$m : Metric ( id == 'vfs.fs.pused')
	$m_used: Metric ( id == 'vfs.fs.used')
	$m_total: Metric ( id == 'vfs.fs.total')
then
    logger.debug("There are vfs.fs.total and vfs.fs.used found "+$m);
    modify( $m ) { 
		setExpressionFormula( "(last("+$m_used.getKey()+")/last("+$m_total.getKey()+"))*100" )
	};
end


rule "Rule 5: generate vfs.fs.pused"
	agenda-group "populate"
	salience -50
when
	$m : Metric ( id == 'vfs.fs.pused')
	$m_used: Metric ( id == 'vfs.fs.units.used')
	$m_total: Metric ( id == 'vfs.fs.units.total')
then
    logger.debug("There are vfs.fs.units.total and vfs.fs.units.used found "+$m);
    modify( $m ) { 
		setExpressionFormula( "(last("+$m_used.getKey()+")/last("+$m_total.getKey()+"))*100" )
	};
end

rule "Rule 6: generate vfs.fs.pused"
	agenda-group "populate"
	salience -50
when
	$m : Metric ( id == 'vfs.fs.pused')
	$m_free: Metric ( id == 'vfs.fs.free')
	$m_total: Metric ( id == 'vfs.fs.total')
then
    logger.debug("There are vfs.fs.total and vfs.fs.free found "+$m);
    modify( $m ) { 
		setExpressionFormula( "((last("+$m_total.getKey()+")-last("+$m_free.getKey()+"))/last("+$m_total.getKey()+"))*100" )
	};
end


rule "Rule 7: generate vfs.fs.pused"
	agenda-group "populate"
	salience -50
when
	$m : Metric ( id == 'vfs.fs.pused')
	$m_free: Metric ( id == 'vfs.fs.free')
	$m_used: Metric ( id == 'vfs.fs.used')
then
    logger.debug("There are vfs.fs.used and vfs.fs.free found "+$m);
    modify( $m ) { 
		setExpressionFormula( "(last("+$m_used.getKey()+")/(last("+$m_free.getKey()+")+last("+$m_used.getKey()+")))*100" )
	};
end